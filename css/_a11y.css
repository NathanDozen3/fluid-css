/*
 * ========================================================================
 * Fluid CSS Accessibility (A11y) Utilities
 * ------------------------------------------------------------------------
 * Utility classes and helpers for improved accessibility, focus management,
 * skip links, visually hidden content, and reduced motion support.
 * Usage: Add .visually-hidden, .skip-link, .focus-ring, etc. to elements
 * to enhance accessibility for all users.
 * Example: <a href="#main" class="skip-link">Skip to content</a>
 * ======================================================================== */

/* Accessibility (a11y) enhancements: focus, contrast, and helpers. */

/* Screen Reader Only Utility
 * Usage: Hide content visually but keep it accessible to screen readers.
 * Example: <span class="sr-only">Screen reader text</span>
 *
 * Alias: .visually-hidden (for developer familiarity)
 * ------------------------------------------------------------------------ */
.sr-only,
.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

/* ------------------------------------------------------------------------
 * Not Screen Reader Only Utility
 * Usage: Undo .sr-only/.visually-hidden for toggling visibility.
 * Example: <span class="not-sr-only">Visible text</span>
 * ------------------------------------------------------------------------ */
.not-sr-only {
  position: static !important;
  width: auto !important;
  height: auto !important;
  margin: 0 !important;
  overflow: visible !important;
  clip: auto !important;
  white-space: normal !important;
  border: 0 !important;
}

/* ------------------------------------------------------------------------
 * Visually Hidden Focusable Helper
 * Usage: Accessibility helper for visually hidden but focusable elements.
 * ------------------------------------------------------------------------ */
.visually-hidden-focusable:not(:focus, :active) {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

/* Accessibility skip link utility */
.skip-link {
  position: absolute;
  left: -9999px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  z-index: var(--z-100);
  background: var(--color-warning);
  color: var(--color-contrast);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-sm);
  text-decoration: none;
}

.skip-link:focus {
  left: var(--spacing-sm);
  top: var(--spacing-sm);
  width: auto;
  height: auto;
  outline: var(--focus-ring);
  outline-offset: var(--focus-outline-offset);
  background: var(--color-warning);
  color: var(--color-contrast);
}

/* Accessible link colors */
a {
  color: var(--link-color);
  text-decoration: underline;
}

/* High-contrast focus styles for all interactive elements */
a,
button,
input,
textarea,
select,
summary,
[tabindex]:not([tabindex='-1']) {
  outline: none;
}

a:hover,
a:focus,
a:focus-visible {
  color: var(--link-color-hover);
}

/* Optional: fallback for browsers without :focus-visible */
a:focus,
button:focus,
input:focus,
textarea:focus,
select:focus,
summary:focus,
[tabindex]:focus {
  outline: var(--focus-ring);
  outline-offset: var(--focus-outline-offset);
}

/* Focus ring utility for custom focusable elements */
.focus-ring:focus {
  outline: var(--focus-ring);
  outline-offset: var(--focus-outline-offset);
}

/* Custom focus ring utility */
.focus-ring-custom:focus {
  box-shadow: var(--focus-shadow);
  outline: none;
}

/* High-contrast outline utility */
.high-contrast-outline:focus {
  outline: var(--high-contrast-outline);
  outline-offset: var(--focus-outline-offset);
}

/* Disabled cursor utility */
.cursor-disabled:disabled {
  cursor: var(--cursor-disabled);
}

/* Focus-visible utility for keyboard navigation */
.focus-visible:focus-visible {
  outline: var(--focus-ring);
  outline-offset: var(--focus-outline-offset);
}

/* Reduced motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ------------------------------------------------------------------------
 * ARIA Attribute Helpers (Note)
 * ------------------------------------------------------------------------
 * ARIA attributes such as aria-live, aria-hidden, aria-expanded, etc. must be set in HTML, not CSS.
 * Example: <div aria-live="polite"></div>
 * CSS cannot set ARIA attributes.
 * ------------------------------------------------------------------------ */
