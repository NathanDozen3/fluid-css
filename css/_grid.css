/*
 * =========================================================================
 * Fluid CSS Grid Utilities
 * -------------------------------------------------------------------------
 * Utility classes for all CSS Grid features: template columns/rows, auto-flow,
 * auto-fit, auto-fill, grid area, start/end, etc.
 * -------------------------------------------------------------------------
 * Shared utilities for gap, alignment, and justification are now in _spacing.css and _utilities.css.
 * Design tokens: see _variables.css
 * ========================================================================= */

@layer grid {
  /* -------------------------------------------------------------------------
   * 1. Grid Container
   * ------------------------------------------------------------------------- */
  .grid {
    display: var(--display-grid);
    gap: var(--gap-md);
  }

  .grid-cols {
    grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr));
    min-width: calc(var(--col-min-width) * var(--min-cols));
  }

  /* -------------------------------------------------------------------------
   * 2. Predefined Grid Transition Classes
   * ------------------------------------------------------------------------- */
  .grid-cols-1-to-2 {
    --min-cols: 1;
    --max-cols: 2;
    --col-min-width: max(330px, calc(50% - var(--gap-md)));
  }

  .grid-cols-1-to-3 {
    --min-cols: 1;
    --max-cols: 3;
    --col-min-width: 256px;
  }

  .grid-cols-1-to-4 {
    --min-cols: 1;
    --max-cols: 4;
    --col-min-width: 208px;
  }

  .grid-cols-1-to-5 {
    --min-cols: 1;
    --max-cols: 5;
    --col-min-width: 192px;
  }

  .grid-cols-1-to-6 {
    --min-cols: 1;
    --max-cols: 6;
    --col-min-width: 160px;
  }

  .grid-cols-2-to-3 {
    --min-cols: 2;
    --max-cols: 3;
    --col-min-width: 288px;
  }

  .grid-cols-2-to-4 {
    --min-cols: 2;
    --max-cols: 4;
    --col-min-width: 224px;
  }

  .grid-cols-2-to-5 {
    --min-cols: 2;
    --max-cols: 5;
    --col-min-width: 208px;
  }

  .grid-cols-2-to-6 {
    --min-cols: 2;
    --max-cols: 6;
    --col-min-width: 208px;
  }

  /* -------------------------------------------------------------------------
   * 3. Helper Classes for Min/Max Columns and Width
   * ------------------------------------------------------------------------- */
  .min-cols-1 {
    --min-cols: 1;
  }

  .min-cols-2 {
    --min-cols: 2;
  }

  .min-cols-3 {
    --min-cols: 3;
  }

  .min-cols-4 {
    --min-cols: 4;
  }

  .max-cols-2 {
    --max-cols: 2;
  }

  .max-cols-3 {
    --max-cols: 3;
  }

  .max-cols-4 {
    --max-cols: 4;
  }

  .max-cols-5 {
    --max-cols: 5;
  }

  .max-cols-6 {
    --max-cols: 6;
  }

  .col-min-w-150 {
    --col-min-width: 150px;
  }

  .col-min-w-180 {
    --col-min-width: 180px;
  }

  .col-min-w-200 {
    --col-min-width: 200px;
  }

  .col-min-w-220 {
    --col-min-width: 220px;
  }

  .col-min-w-250 {
    --col-min-width: 250px;
  }

  .col-min-w-280 {
    --col-min-width: 280px;
  }

  .col-min-w-300 {
    --col-min-width: 300px;
  }

  /* -------------------------------------------------------------------------
   * 4. Explicit Grid Column and Row Classes
   * ------------------------------------------------------------------------- */
  .grid-cols-1 {
    grid-template-columns: repeat(1, 1fr);
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid-cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }

  .grid-cols-4 {
    grid-template-columns: repeat(4, 1fr);
  }

  .grid-cols-auto {
    grid-template-columns: var(--display-auto);
  }

  .grid-cols-minmax {
    grid-template-columns: minmax(0, 1fr);
  }

  .grid-rows-1 {
    grid-template-rows: 1fr;
  }

  .grid-rows-2 {
    grid-template-rows: repeat(2, 1fr);
  }

  .grid-rows-3 {
    grid-template-rows: repeat(3, 1fr);
  }

  .grid-rows-4 {
    grid-template-rows: repeat(4, 1fr);
  }

  .grid-rows-auto {
    grid-template-rows: var(--display-auto);
  }

  .grid-rows-minmax {
    grid-template-rows: minmax(0, 1fr);
  }

  /* -------------------------------------------------------------------------
   * 5. Grid Auto-Flow
   * ------------------------------------------------------------------------- */
  .grid-flow-row {
    grid-auto-flow: var(--row);
  }

  .grid-flow-column {
    grid-auto-flow: var(--column);
  }

  .grid-flow-dense {
    grid-auto-flow: var(--dense);
  }

  .grid-flow-row-dense {
    grid-auto-flow: var(--row) var(--dense);
  }

  .grid-flow-col-dense {
    grid-auto-flow: var(--column) var(--dense);
  }

  /* -------------------------------------------------------------------------
   * 6. Grid Gap Utilities (gap, column-gap, row-gap)
   * Usage: Control spacing between grid tracks and cells.
   * Example: <div class="grid gap-xs col-gap-lg row-gap-sm"></div>
   * ------------------------------------------------------------------------- */
  .grid-gap-0 {
    gap: var(--spacing-0);
  }

  .grid-gap-xs {
    gap: var(--gap-xs);
  }

  .grid-gap-sm {
    gap: var(--spacing-sm);
  }

  .grid-gap-md {
    gap: var(--gap-md);
  }

  .grid-gap-lg {
    gap: var(--spacing-lg);
  }

  .grid-gap-xl {
    gap: var(--spacing-xl);
  }

  .col-gap-0 {
    column-gap: var(--spacing-0);
  }

  .col-gap-xs {
    column-gap: var(--gap-xs);
  }

  .col-gap-sm {
    column-gap: var(--spacing-sm);
  }

  .col-gap-md {
    column-gap: var(--gap-md);
  }

  .col-gap-lg {
    column-gap: var(--spacing-lg);
  }

  .col-gap-xl {
    column-gap: var(--spacing-xl);
  }

  .row-gap-0 {
    row-gap: var(--spacing-0);
  }

  .row-gap-xs {
    row-gap: var(--gap-xs);
  }

  .row-gap-sm {
    row-gap: var(--spacing-sm);
  }

  .row-gap-md {
    row-gap: var(--gap-md);
  }

  .row-gap-lg {
    row-gap: var(--spacing-lg);
  }

  .row-gap-xl {
    row-gap: var(--spacing-xl);
  }

  /* -------------------------------------------------------------------------
   * 7. Justify/Align Items
   * ------------------------------------------------------------------------- */

  /*
    Shared utilities for alignment (align-items-*, justify-items-*) are now in _utilities.css.
    Please use those atomic classes for alignment in grid layouts.
  */

  /* -------------------------------------------------------------------------
   * 8. Justify/Align Content
   * ------------------------------------------------------------------------- */

  /*
    Shared utilities for justification and alignment (justify-content-*, align-content-*)
    are now in _utilities.css. Please use those atomic classes for grid layouts.
  */

  /* -------------------------------------------------------------------------
   * 9. Grid Item Placement
   * ------------------------------------------------------------------------- */
  .col-start-1 {
    grid-column-start: 1;
  }

  .col-start-2 {
    grid-column-start: 2;
  }

  .col-start-3 {
    grid-column-start: 3;
  }

  .col-end-1 {
    grid-column-end: 1;
  }

  .col-end-2 {
    grid-column-end: 2;
  }

  .col-end-3 {
    grid-column-end: 3;
  }

  .row-start-1 {
    grid-row-start: 1;
  }

  .row-start-2 {
    grid-row-start: 2;
  }

  .row-start-3 {
    grid-row-start: 3;
  }

  .row-end-1 {
    grid-row-end: 1;
  }

  .row-end-2 {
    grid-row-end: 2;
  }

  .row-end-3 {
    grid-row-end: 3;
  }

  /* -------------------------------------------------------------------------
   * 10. Grid Area
   * ------------------------------------------------------------------------- */
  .grid-area-auto {
    grid-area: var(--auto);
  }

  .grid-area-1 {
    grid-area: 1 / 1 / 2 / 2;
  }

  .grid-area-2 {
    grid-area: 2 / 2 / 3 / 3;
  }

  /* -------------------------------------------------------------------------
   * 11. Justify/Align Self
   * ------------------------------------------------------------------------- */

  /*
    Shared utilities for self-alignment (align-self-*, justify-self-*) are now in _utilities.css.
    Please use those atomic classes for grid layouts.
  */

  /* -------------------------------------------------------------------------
   * 12. Grid Column/Row Span Utilities
   * Example: <div class="col-span-2 row-span-3"></div>
   * ------------------------------------------------------------------------- */

  /*
    The following classes are now defined in the more granular section below to avoid duplication:
    .col-span-1, .col-span-2, .col-span-3, .col-span-4, .col-span-5, .col-span-6,
    .row-span-1, .row-span-2, .row-span-3, .row-span-4, .row-span-5, .row-span-6
  */

  /* ========================================================================
   * More Granular Grid Span Utilities
   * ------------------------------------------------------------------------
   * Usage: Add .col-span-5, .col-span-6, .row-span-5, .row-span-6, etc.
   * Example: <div class="col-span-5 row-span-6"></div>
   * ======================================================================== */

  /* ------------------------------------------------------------------------
   * Granular Grid Span Utilities
   * Usage: Set grid column/row span for more granular layouts.
   * Example: <div class="col-span-5"></div>
   * ------------------------------------------------------------------------ */
  .col-span-1 {
    grid-column: span 1 / span 1;
  }

  .col-span-2 {
    grid-column: span 2 / span 2;
  }

  .col-span-3 {
    grid-column: span 3 / span 3;
  }

  .col-span-4 {
    grid-column: span 4 / span 4;
  }

  .col-span-5 {
    grid-column: span 5 / span 5;
  }

  .col-span-6 {
    grid-column: span 6 / span 6;
  }

  .col-span-7 {
    grid-column: span 7 / span 7;
  }

  .col-span-8 {
    grid-column: span 8 / span 8;
  }

  .col-span-9 {
    grid-column: span 9 / span 9;
  }

  .col-span-10 {
    grid-column: span 10 / span 10;
  }

  .col-span-11 {
    grid-column: span 11 / span 11;
  }

  .col-span-12 {
    grid-column: span 12 / span 12;
  }

  .row-span-1 {
    grid-row: span 1 / span 1;
  }

  .row-span-2 {
    grid-row: span 2 / span 2;
  }

  .row-span-3 {
    grid-row: span 3 / span 3;
  }

  .row-span-4 {
    grid-row: span 4 / span 4;
  }

  .row-span-5 {
    grid-row: span 5 / span 5;
  }

  .row-span-6 {
    grid-row: span 6 / span 6;
  }

  .row-span-7 {
    grid-row: span 7 / span 7;
  }

  .row-span-8 {
    grid-row: span 8 / span 8;
  }

  .row-span-9 {
    grid-row: span 9 / span 9;
  }

  .row-span-10 {
    grid-row: span 10 / span 10;
  }

  .row-span-11 {
    grid-row: span 11 / span 11;
  }

  .row-span-12 {
    grid-row: span 12 / span 12;
  }

  /* -------------------------------------------------------------------------
   * 13. Grid Auto Columns/Rows Utilities
   * Example: <div class="grid-auto-cols-min grid-auto-rows-max"></div>
   * ------------------------------------------------------------------------- */
  .grid-auto-cols-min {
    grid-auto-columns: min-content;
  }

  .grid-auto-cols-max {
    grid-auto-columns: max-content;
  }

  .grid-auto-cols-fr {
    grid-auto-columns: 1fr;
  }

  .grid-auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-auto-rows-max {
    grid-auto-rows: max-content;
  }

  .grid-auto-rows-fr {
    grid-auto-rows: 1fr;
  }

  /* -------------------------------------------------------------------------
   * 14. Grid Template Areas Utilities (Examples)
   * Example: <div class="grid-areas-header-main-footer"></div>
   * ------------------------------------------------------------------------- */
  .grid-areas-header-main-footer {
    grid-template-areas:
      'header'
      'main'
      'footer';
  }

  /* -------------------------------------------------------------------------
   * 15. Grid Justify/Align Content (All Values)
   * ------------------------------------------------------------------------- */

  /* Shared utilities for justify-content-stretch and align-content-stretch are now in _utilities.css. */

  /* -------------------------------------------------------------------------
   * 16. Grid Justify/Align Self (All Values)
   * ------------------------------------------------------------------------- */

  /* Shared utilities for justify-self-left, justify-self-right, and align-self-baseline are now in _utilities.css. */

  /* -------------------------------------------------------------------------
   * 17. Grid Dense Placement for Items
   * ------------------------------------------------------------------------- */

  /* Shared utilities for place-content-*, place-items-*, and place-self-* are now in _utilities.css. */

  /* -------------------------------------------------------------------------
   * 18. Grid Line Naming (Example)
   * Example: <div class="col-start-header col-end-footer"></div>
   * ------------------------------------------------------------------------- */
  .col-end-footer {
    grid-column-end: footer-end;
  }

  .col-start-header {
    grid-column-start: header-start;
  }

  /* -------------------------------------------------------------------------
   * 19. Subgrid Utilities
   * Example: <div class="grid-cols-subgrid grid-rows-subgrid"></div>
   * ------------------------------------------------------------------------- */
  .grid-cols-subgrid {
    grid-template-columns: subgrid;
  }

  .grid-rows-subgrid {
    grid-template-rows: subgrid;
  }

  /* Dark mode overrides */
  @media (prefers-color-scheme: dark) {
    .grid {
      box-shadow: var(--shadow-md);
    }
  }
}
